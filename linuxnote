ctrl u  删除到开始貌似。。

ctrl l ---clear  清屏

cd -  临近的两个目录之间切换

~宿主目录 （家目录）


$ 普通用户

# 超级用户

目录文件只占用4096字节大小，不包括里面文件的容量

mkdir aa/bb/cc -p   创建多层目录要加-p参数


rmdir 删除空目录

rm -ri有提示，递归删除

touch 如果文件不存在 创建文件 如果文件存在会更新文件修改时间

cp 1 2 如果2存在会覆盖掉  （1 2 为文件）

cp 目录时如果目录不存在要加-r参数  如果目录参数，在目录里面增加

==================================================================
查看文件内容：
cat 
more 回车 往下滚一行 空格滚一页   退出的话 q或者ctrl c
less 回车  ctrl f b p n   退出的话 q或者ctrl c
head 默认查看前10行    可以加参数  head -5 文件名
tail 默认查看最后10行
==================================================================

ln -s 文件名  快捷方式名字   创建快捷方式   （软连接） 
注：创建时文件名要用绝对路径，否则移动快捷方式以后，会找不到其连接的文件

ln 文件名1  文件名2  创建硬链接
注：linux存储文件单元 为 块
关于硬链接 inode索引指向文件
touch一个文件相当于创建一个硬链接，所有硬链接指向磁盘的一个inode
删除一个硬链接不会删除文件，但是删除所有的硬链接以后文件会被删除
目录不能创建硬链接 只有文件才可以
硬链接创建时不需要指定绝对路径，因为他靠inode找文件
==================================================================


wc 文件1   获取文本文件1的行数 单词数 字节数等信息
od -t 指定数据的显示格式   查看二进制文件信息
du -h 查看当前目录所有文件的大小 -h代表human 以人类能看懂的方式展示
df -h 提示磁盘使用情况  -h 同上 不加-h  展示的东西你看不懂

==================================================================

which 查看命令所在磁盘的位置  查询不到说明是shell内建命令 查不到 比如说cd

==================================================================
chmod  [who]  [+|-|=] [mode] 文件名  
例子
chmod o+w 文件名
chmod a+x 文件名
chmod =w 文件名
who:u  	user
	g	group
	o	others
	a 	all  who不写 默认是a 所有
+	增加权限
-	减少权限
=	覆盖原来的权限

mode:
r	读
w	写
x	执行
也可以使用数字设定发   r:4  w:2  x:1


chmod 755 文件名
chmod -001 文件名 给其他人减掉执行权限

==================================================================
文件所有者 可以 不属于 文件所属组

举例group1 中的 user1 拥有文件tmp
但是tmp的所属组是group2那么group2中的用户可以使用tmp文件

==================================================================
chown 所有者：组名 文件名 改变文件的所有者 和 文件所属组 要加sudo

chgrp 组名 文件名 更改文件所属组 要加sudo

==================================================================
目录必须有执行权限才可以cd进去

==================================================================

*通配所有字符  ？通配一个字符
==================================================================
根据名字、大小、类型查找文件 
find 目录名 -name  “文件名”  根据文件名要查找  文件名要加双引号
find 目录名 -size  大小    find ~ -size -10k -size +5k
   k小写 M要大写 +大于 -小于    两遍-size ...可以设置范围 5k - 10k
find 目录名 -type  d/f/b/c/s/p  b 块  d 目录 f  普通文件...
==================================================================

根据内容查找文件
grep -r "abc" ~/

==================================================================

挂载
sudo fdisk -l 查看设备
sudo mount /dev/sdb1 /mnt  把sdb1这个设备挂载到mnt目录下
sudo mount /mnt  卸载/mnt中的设备（注：必须退出/mnt（你要卸载的）目录，才可以卸载，不然操作系统认为你在使用设备，因此不能卸载）
挂载一定要挂载/mnt 目录中，如果挂载到/home/hongbo/中，那么hongbo中的文件会看不到，暂时被覆盖，只有当卸载设备以后才能看到
如果非要挂载到别的目录下，一定要保证是空目录

==================================================================
硬盘1 sda  硬盘2 sdb  硬盘3  sdc……
sda1 sda2 sda3 sda4  主分区最多有4个   第一个逻辑分区是从sda5  开始的
sd SCSI Device
hd Hard Disk  硬盘
fd Floppy Disk 软盘



==================================================================
gzip gunzip
bzip2 bunzip2  可以保留源文件  但是二者都不能压缩目录，默认二者压缩完源文件都没了   但是bzip2 通过参数-k 可以保留源文件

==================================================================

tar   如果不使用z  j参数 该命令只能对文件和目录打包  不能压缩     tar命令只是打包，只有加上  z  j参数 tar内部帮我们完成压缩 
c  创建	  压缩
x  释放   解压缩   c x 互斥
v  显示提示信息  压缩和解压缩时都可以用  也可以省略
f  指定压缩文件名字
z  使用gzip的方式压缩文件    .gz
j  使用bzip2的方式压缩文件   .bz2			z  j互斥



压缩  tar zcvf    生成的名字是xxx.tar.gz			要压缩的文件或目录
			tar jcvf 		生成的名字是xxx.tar.bz2			要压缩的文件或目录
			
解压缩
			tar jxvf		压缩包名字   -C   test/  通过-C /home/hongbo 解压到指定目录  不加-C /home/hongbo  默认当前目录 
			
==================================================================			
			
			
rar    必须手动安装该软件
a   压缩
x   解压缩

压缩   rar a 生成的压缩文件的名字（可以不加.rar，他会自动帮你生成）    压缩的文件或目录
解压缩 rar x 压缩文件名  （解压缩目录）不跟目录 默认当前目录

==================================================================

zip

zip  压缩包的名字  要压缩的文件或目录    压缩目录时候要加-r  递归  否则只压缩目录名 解压后空目录
unzip  压缩包的名字  -d 指定目录    不加-d 指定目录  默认当前目录

==================================================================

tty1 -tty6  文字终端
tty7  桌面终端
ctrl + alt + f1 --f7 切换终端
==================================================================
who   查看当前在线用户的情况
:0 对应的 tty7  不同版本显示的东西不同

==================================================================
ps  a列出当前所有用户的信息
ps  aux查看没有终端的应用程序
ps  aux | grep aaa
==================================================================
kill -l  查看信号一共64个
kill -SIGKILL pid  或者  kill -9  pid
==================================================================
env 查看当前的环境变量

linux下的环境变量的格式  key = value
key=value:value:value

env | grep PATH
top  相当于windows下的任务管理器  只能查看不能操作
==================================================================
ping ip -c 4   一共回馈4次 
ping ip -i 1    每个一秒回馈一次

==================================================================
nslookup  www.baidu.com 
查看域名对应的ip
==================================================================
sudo adduser   脚本添加用户   如果用户名包含大写字母会报错
sudo groupadd Robin 添加组
sudo useradd -s /bin/bash(使用什么类型的shell) -g Robin(指定用户组) -d /home/Robin(指定用户宿主目录) -m(如果目录不存在就创建一个) Robin(用户名)
sudo passwd Robin 修改用户密码
passwd 修改当前用户密码
sudo passwd (root) 修改root用户密码  root可加可不加

sudo deluser 用户名   只删除用户不删除用户的宿主目录
sudo userdel -r 用户名  -r选项用来删除用户宿主目录
/etc/passwd 文件里面可以查看所有的用户

==================================================================
修改etc等目录下的文件要sudo 否则只读权限
==================================================================

sudo service …… restart  重启服务 
==================================================================
实名用户登录ftp服务器：
ftp + ip(server)
输入用户名
输入密码

ftp不允许上传和下载目录，如果想操作目录只能打包
文件的上传和下载
put file  get file 
注意，只能上传登录ftp服务器时client所在的目录里的文件，如果要上传本体其他文件夹下的文件需要退出ftp server 切换目录然后再次登录，再上传


匿名用户登录ftp服务器：
ftp + ip(server)
输入用户名  anonymous
输入密码 不用输入直接回车
不允许匿名用户在任意目录切换，需要在ftp服务器上创建一个匿名用户的目录  匿名用户的根目录
==================================================================
十五个经典算法研究与总结
微软等数据结构算法面试100题全部答案集锦
==================================================================
alias 查看命令是否被封装  ls被封装成 ls --color=auto   因此我们ls时查看的东西有颜色
alias pag='ps aux | grep' 自己打造自己的命令   需要长久有效需要设置配置文件 .bashrc
==================================================================
echo $PATH 打印PATH变量对应的内容
==================================================================
gcc aaa.c -I include -o app -D DEBUG
-I指定头文件所在目录
-D DEBUG 指定编译时定义宏#define DEBUG
-O0 -O1 -O2 -O3 指定优化代码等级  3最高了  默认是1
-Wall 输入警告信息
-g 添加调试信息
-v查看版本号
-fPIC生成与位置无关的.o
-shared 生成共享库
gcc main.c -Iinclude -L lib -l test -o app
指定头文件所在目录include
指定链接库所在目录lib
指定链接库为libtest.a
nm 查看文件里面都有什么 nm libtest.a   nm app
ldd 查看可执行程序链接时用到的所有的共享库
LD_LIBRARY_PATH共享库的环境变量 指定以后，先搜索你指定的目录，然后在搜索默认的目录
/etc/ld.so.conf
sudo ldconfig -vS
==================================================================
1.生成对应的.o文件
2.ar rcs + 静态库名字(libtest.a) + 生成的所有.o文件  ar是个工具
3.发布静态库和头文件
==================================================================
静态库是由多个.o构成的
静态库链接时，main里面用到了什么函数就把这个函数对应的.o文件链接进去 .o是链接的最小单元 不会把所有.a都打包到应用程序中，只会打包用到的